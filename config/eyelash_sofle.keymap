#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        print_screen_3: print_screen_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LEFT_SHIFT &kp NUMBER_3>;
            label = "PRINT_SCREEN_3";
        };

        print_screen_4: print_screen_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LEFT_SHIFT &kp NUMBER_4>;
            label = "PRINT_SCREEN_4";
        };

        print_screen_5: print_screen_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LEFT_SHIFT &kp N5>;
            label = "PRINT_SCREEN_5";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3        &kp N4       &kp N5                  &kp UP_ARROW     &kp N6                 &kp N7       &kp N8     &kp N9         &kp N0     &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E         &kp R        &kp T                   &kp DOWN_ARROW   &kp Y                  &kp U        &kp I      &kp O          &kp P      &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D         &kp F        &kp G                   &kp LEFT_ARROW   &kp H                  &kp J        &kp K      &kp L          &kp SEMI   &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C         &kp V        &kp B                   &kp RIGHT_ARROW  &kp N                  &kp M        &kp COMMA  &kp DOT        &kp FSLH   &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_GUI  &kp LEFT_ALT  &lt 1 SPACE  &kp LEFT_PARENTHESIS    &kp ENTER        &kp RIGHT_PARENTHESIS  &lt 2 ENTER  &kp RCMD   &kp RIGHT_ALT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "LAYER0";
        };

        layer_1 {
            bindings = <
&kp GRAVE   &kp F1     &kp F2        &kp F3     &kp F4     &kp F5              &mmv MOVE_UP     &kp F6             &kp F7              &kp F8               &kp F9               &kp F10           &kp DELETE
&trans      &trans     &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4            &mmv MOVE_DOWN   &kp PG_UP          &kp PAGE_DOWN       &kp END              &kp HOME             &kp MINUS         &kp EQUAL
&trans      &trans     &trans        &trans     &trans     &mkp MB5            &mmv MOVE_LEFT   &kp LEFT           &kp DOWN            &kp UP_ARROW         &kp RIGHT            &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&trans      &trans     &trans        &trans     &trans     &trans              &mmv MOVE_RIGHT  &kp LG(LEFT)       &kp LA(LEFT_ARROW)  &kp LA(RIGHT_ARROW)  &kp LG(RIGHT_ARROW)  &trans            &trans
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &kp LCMD   &to 0      &kp LEFT_BRACKET    &mkp LCLK        &kp RIGHT_BRACKET  &to 1               &kp RCMD             &kp RIGHT_ALT        &kp RCTRL
            >;

            display-name = "layer1";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE        &kp F1      &kp F2        &kp F3            &kp F4  &kp F5             &mmv MOVE_UP     &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &bt BT_CLR
&kp C_MUTE       &trans      &trans        &trans            &trans  &print_screen_3    &mmv MOVE_DOWN   &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &out OUT_TOG
&kp C_VOLUME_UP  &kp C_NEXT  &kp C_PLAY    &trans            &trans  &print_screen_4    &mmv MOVE_LEFT   &rgb_ug RGB_ON   &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI
&kp C_VOL_DN     &kp C_PREV  &kp C_PAUSE   &trans            &trans  &print_screen_5    &mmv MOVE_RIGHT  &rgb_ug RGB_OFF  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD
&trans           &kp LCTRL   &kp LEFT_ALT  &kp LEFT_COMMAND  &to 2   &kp LEFT_BRACE     &mkp LCLK        &kp RIGHT_BRACE  &to 0            &sys_reset       &soft_off        &bootloader
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
