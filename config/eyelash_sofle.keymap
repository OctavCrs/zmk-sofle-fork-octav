#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    behaviors {
    };

    macros {
        print_screen_3: print_screen_3 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LEFT_SHIFT &kp NUMBER_3>;
            label = "PRINT_SCREEN_3";
        };

        print_screen_4: print_screen_4 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LEFT_SHIFT &kp NUMBER_4>;
            label = "PRINT_SCREEN_4";
        };

        print_screen_5: print_screen_5 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LCMD &kp LEFT_SHIFT &kp N5>;
            label = "PRINT_SCREEN_5";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp ESC     &kp N1     &kp N2        &kp N3    &kp N4     &kp N5          &kp UP_ARROW     &kp N6       &kp N7     &kp N8     &kp N9         &kp N0     &kp BACKSPACE
&kp TAB     &kp Q      &kp W         &kp E     &kp R      &kp T           &kp DOWN_ARROW   &kp Y        &kp U      &kp I      &kp O          &kp P      &kp BSLH
&kp CAPS    &kp A      &kp S         &kp D     &kp F      &kp G           &kp LEFT_ARROW   &kp H        &kp J      &kp K      &kp L          &kp SEMI   &kp APOS
&kp LSHFT   &kp Z      &kp X         &kp C     &kp V      &kp B           &kp RIGHT_ARROW  &kp N        &kp M      &kp COMMA  &kp DOT        &kp FSLH   &kp RIGHT_SHIFT
&kp C_MUTE  &kp LCTRL  &kp LEFT_ALT  &kp LCMD  &kp SPACE  &lt 1 DELETE    &kp ENTER        &lt 2 ENTER  &kp SPACE  &kp RCMD   &kp RIGHT_ALT  &kp RCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOL_DN>;
            display-name = "BASE";
        };

        layer_1 {
            bindings = <
&kp GRAVE       &kp F1     &kp F2        &kp F3            &kp F4  &kp F5     &mmv MOVE_UP     &kp LG(LEFT_BRACKET)  &kp LG(RIGHT_BRACKET)  &kp LG(LEFT_BRACE)  &kp LG(RIGHT_BRACE)  &kp F10           &kp DELETE
&kp TAB         &kp F6     &kp F7        &kp F8            &kp F9  &kp F10    &mmv MOVE_DOWN   &kp PAGE_DOWN         &kp PAGE_UP            &kp HOME            &kp END              &kp MINUS         &kp EQUAL
&kp CAPSLOCK    &kp F11    &kp F12       &trans            &trans  &trans     &mmv MOVE_LEFT   &kp LEFT              &kp DOWN               &kp UP_ARROW        &kp RIGHT            &kp LEFT_BRACKET  &kp RIGHT_BRACKET
&kp LEFT_SHIFT  &trans     &trans        &trans            &trans  &trans     &mmv MOVE_RIGHT  &kp C_PREV            &kp C_NEXT             &kp C_PLAY_PAUSE    &kp C_MUTE           &kp C_VOL_DN      &kp C_VOL_UP
&kp C_MUTE      &kp LCTRL  &kp LEFT_ALT  &kp LEFT_COMMAND  &none   &none      &mkp LCLK        &none                 &none                  &kp RCMD            &kp RIGHT_ALT        &kp RCTRL
            >;

            display-name = "NAV/M";
            sensor-bindings = <&scroll_encoder>;
        };

        layer_2 {
            bindings = <
&kp TILDE        &kp F1      &kp F2       &kp F3       &kp F4  &kp F5             &kp C_VOLUME_UP   &kp F6           &kp F7           &kp F8           &kp F9           &kp F10          &bt BT_CLR
&kp C_MUTE       &trans      &trans       &trans       &trans  &print_screen_3    &kp C_VOL_DN      &bt BT_SEL 0     &bt BT_SEL 1     &bt BT_SEL 2     &bt BT_SEL 3     &bt BT_SEL 4     &out OUT_TOG
&kp C_VOLUME_UP  &kp C_NEXT  &kp C_PLAY   &trans       &trans  &print_screen_4    &kp C_PREV        &rgb_ug RGB_ON   &rgb_ug RGB_BRI  &rgb_ug RGB_EFF  &rgb_ug RGB_SPI  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI
&kp C_VOL_DN     &kp C_PREV  &kp C_PAUSE  &trans       &trans  &print_screen_5    &kp C_NEXT        &rgb_ug RGB_OFF  &rgb_ug RGB_BRD  &rgb_ug RGB_EFR  &rgb_ug RGB_SPD  &rgb_ug RGB_HUD  &rgb_ug RGB_SAD
&trans           &sys_reset  &soft_off    &bootloader  &none   &none              &kp C_PLAY_PAUSE  &none            &none            &sys_reset       &soft_off        &bootloader
            >;

            sensor-bindings = <&scroll_encoder>;
            label = "KEEB";
        };

        layer_3 {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
